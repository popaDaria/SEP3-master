@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons
@using SEP3.Data
@using SEP3.Model

@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject ICloudRatingService CloudRatingService
@inject ICloudHospitalService CloudHospitalService;
@inject NavigationManager NavigationManager;

<div class="component ml-2 mr-2" style="@display">
    <div class="card" style="width: 18rem;">
        <img class="card-img-top" src="@imgSource" alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title">@name</h5>
            <p class="card-text">
                <span class="oi oi-location">@address</span>
                <br/>
                <span class="oi oi-star">@postalCode</span>
                <br/>
                @name
            </p>
            <a href="/hospital/@id" class="btn btn-primary">View hospital page</a>
            @if (page.Equals("validate"))
            {
                <AuthorizeView Roles="admin">
                    <a class="btn btn-success" @onclick="@Validate" style="color:white">Validate</a>
                    <br/>
                    <br/>
                    <a class="btn btn-danger" @onclick="@Show" style="color:white">Remove</a>
                </AuthorizeView>
            }
            @*@if (page.Equals("#"))
            {
                <AuthorizeView Roles="patient">
                    <br/>
                    <label>Rate Hospital:</label>
                    <select @bind="@RatingValue">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                    </select>
                    <br/>
                    <br/>
                    <a class="btn btn-success" @onclick="@Rate" style="color:white">Submit</a>
                </AuthorizeView>
            }*@
            @*@if (managerId == @mngID)
            {
                <AuthorizeView Roles="manager">
                    <a class="btn btn-success" @onclick="@Manage" style="color:white">Manage Information</a>
                    <br/>
                    <br/>
                </AuthorizeView>
            }*@
        </div>
    </div>
</div>
<SfDialog Width="335px" Target="#target" IsModal="true" @bind-Visible="@Visibility">
    <DialogTemplates>
        <Header> Confirmation </Header>
        <Content>
            <p>Are you sure you want to remove this hospital?</p>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Yes" IsPrimary="false" OnClick="@Remove"/>
        <DialogButton Content="Cancel" IsPrimary="true" OnClick="@Hide"/>
    </DialogButtons>
    <DialogEvents></DialogEvents>
    <DialogAnimationSettings Effect="@DialogEffect.None"></DialogAnimationSettings>
</SfDialog>

@code {

    [Parameter]
    public string imgSource { get; set; }

    [Parameter]
    public string name { get; set; }

    [Parameter]
    public string address { get; set; }

    [Parameter]
    public string info { get; set; }

    [Parameter]
    public int postalCode { get; set; }

    [Parameter]
    public string id { get; set; }

    [Parameter]
    public string page { get; set; }
    
    /*[Parameter]
    public int managerId { get; set; }
    */

    string display = "display: inline;";


    public async void Validate()
    {
        await CloudHospitalService.ValidateHospital(Int32.Parse(id));
        display = "display: none;";
        NavigationManager.NavigateTo("/");
    }

    public async void Remove()
    {
        await CloudHospitalService.RemoveHospital(Int32.Parse(id));
        display = "display: none;";
        Hide();
    }

    private bool Visibility { get; set; } = false;

    private void Show()
    {
        this.Visibility = true;
    }

    private void Hide()
    {
        this.Visibility = false;
    }

    /*private void Manage()
    {
        NavigationManager.NavigateTo("/hospital/"+id);
    }*/
    
}

<style>
    .component {
    display: inline-block;
    padding: 10px;
    flex: 0 0 auto;
    }
</style>