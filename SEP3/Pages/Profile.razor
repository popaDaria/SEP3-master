@page "/profile"
@attribute [Authorize(Policy = "MustBeLoggedIn")]
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.InPlaceEditor
@using SEP3.Model
@using SEP3.Data
@using SEP3.Auth
@using Syncfusion.Blazor.Buttons
@using RenderMode = Syncfusion.Blazor.InPlaceEditor.RenderMode
@using InputType = Syncfusion.Blazor.InPlaceEditor.InputType

@inject ICloudUserService CloudUserService;
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager NavigationManager


<link href="css/profile.css" type="text/css" rel="stylesheet"/>
@if (user == null)
{
    <div class="d-flex">
        <div class="spinner-grow text-light align-middle spinner" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container" style="box-sizing: border-box; padding-top: 5%; padding-bottom: 5%;">
        <div class="emp-profile container p-3">
            <form method="post">
                <div class="row">
                    <div class="col-lg-4">
                        <div class="profile-img">
                            <img src="images/weed.jpg" alt=""/>
                        </div>
                    </div>
                    <div class="col-lg-1"></div>
                    <div class="col-lg-3">
                        <div class="profile-head">
                            <h3 align="center">
                                @user.firstname @user.lastname
                            </h3>
                            <h4 align="center">
                                @user.userType.ToUpper()
                            </h4>
                        </div>
                    </div>
                    <div class="col-lg-4 text-center">
                        <input type="button" class="btn btn-info" name="btnAddMore" value="Edit Profile" @onclick="@EnableEdit"/>
                        <br/>
                        <br/>
                        <input type="button" class="btn btn-success" name="save" value="Save Changes" @onclick="@SendToServer" style="@display"/>
                        <input type="button" class="btn btn-danger" name="cancel" value="Discard Changes" @onclick="@Cancel" style="@display"/>
                        <br/>
                        <br/>
                        <AuthorizeView Roles="manager">
                            <input type="button" class="btn btn-info" name="manageHospitals" value="Manage Hospitals" @onclick="@ManageHospitals"/>
                            <br/>
                            <br/>
                            <input type="button" class="btn btn-info" name="addDoctors" value="Add Doctors" @onclick="@AddNewDoctor"/>
                        </AuthorizeView>
                    </div>
                </div>
                <br/>
                <div class="row">
                    <div class="col-md-12 profile-tab">
                        <SfTab>
                            <TabItems>
                                <TabItem>
                                    <ChildContent>
                                        <TabHeader Text="About"/>
                                    </ChildContent>
                                    <ContentTemplate>
                                        <div class="container">
                                            <br/>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>User ID</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <p>@user.idNr</p>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Email</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Text" ShowButtons="@ShowButtons" Disabled="@Disabled" @bind-Value="@editedUser.email" SubmitOnEnter="true" ActionOnBlur="ActionBlur.Submit">
                                                    </SfInPlaceEditor>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Phone</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Text" ShowButtons="@ShowButtons" Disabled="@Disabled" @bind-Value="@editedUser.telNo" SubmitOnEnter="true" ActionOnBlur="ActionBlur.Submit">
                                                    </SfInPlaceEditor>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Gender</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Text" ShowButtons="@ShowButtons" Disabled="@Disabled" @bind-Value="@editedUser.gender" SubmitOnEnter="true" ActionOnBlur="ActionBlur.Submit">
                                                    </SfInPlaceEditor>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Birthday</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Date" ShowButtons="@ShowButtons" Disabled="@Disabled" @bind-Value="@editedUser.birthday" SubmitOnEnter="true" ActionOnBlur="ActionBlur.Submit">
                                                    </SfInPlaceEditor>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Address</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <SfInPlaceEditor Mode="@Mode" EditableOn="@EditableOn" Type="InputType.Text" ShowButtons="@ShowButtons" Disabled="@Disabled" @bind-Value="@editedUser.address" SubmitOnEnter="true" ActionOnBlur="ActionBlur.Submit">
                                                    </SfInPlaceEditor>
                                                </div>
                                            </div>
                                        </div>
                                    </ContentTemplate>
                                </TabItem>
                                <TabItem>
                                    <ChildContent>
                                        <TabHeader Text="Medical History"/>
                                    </ChildContent>
                                    <ContentTemplate>
                                        <div class="container">
                                            <br/>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Treatment</label>
                                                </div>
                                                <div class="col-md-6">
                                                    <p>COVID-19 - Bleach</p>
                                                </div>
                                            </div>
                                        </div>
                                    </ContentTemplate>
                                </TabItem>
                            </TabItems>
                        </SfTab>
                    </div>
                </div>
            </form>
        </div>
    </div>
}

@code {
    private RenderMode Mode = RenderMode.Inline;
    private EditableType EditableOn = EditableType.Click;
    private bool ShowButtons { get; set; } = false;
    private bool Disabled { get; set; } = true;
    private string display = "display: none";
    User user { get; set; }
    User editedUser = new User();
    string idNr = "";

    protected override async Task OnInitializedAsync()
    {
        idNr = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).GetAuthenticationStateAsync().Result.User.Claims.ToList()[0].Value;
        Console.WriteLine("Logged in as: "+idNr);
        user = await CloudUserService.GetUser(idNr);
        editedUser.Update(user);
    }

    public void EnableEdit()
    {
        Disabled = false;
        display = "display: inline";
    }

    public async Task SendToServer()
    {
        await CloudUserService.EditUser(editedUser);
        user.Update(editedUser);
        Disabled = true;
        display = "display: none";
    }

    public void Cancel()
    {
        Disabled = true;
        display = "display: none";
        editedUser.Update(user);
        StateHasChanged();
    }


    private void ManageHospitals()
    {
        NavigationManager.NavigateTo("/manage/"+user.idNr);
    }

    private void AddNewDoctor()
    {
        NavigationManager.NavigateTo("/addDoctor/"+user.idNr);
    }


}