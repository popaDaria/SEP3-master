@page "/register"
@using Data
@using SEP3.Model
@using SEP3.Auth
@using Syncfusion.Blazor.Inputs
@using InputType = Syncfusion.Blazor.Inputs.InputType
@inject ICloudUserService CloudUserService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<link href="css/style.css" type="text/css" rel="stylesheet"/>

<EditForm Model="@userToAdd" OnValidSubmit="Add">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="surround">
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="formBlock">
                    
                    @* TODO *@
                    <label>
                        Register as:
                        <InputSelect @bind-Value="userToAdd.userType">
                            <option></option>
                            <option>patient</option>
                            <option>manager</option>
                        </InputSelect>
                    </label>

                    <div class="row material2">
                        <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8 formStyle">
                            <SfTextBox Placeholder="First Name" FloatLabelType="@FloatLabelType.Auto" @bind-value="userToAdd.firstname" disabled="@isDisabled" Type="InputType.Text"></SfTextBox>
                        </div>
                    </div>
                    @* <label>First Name:<input type="text" @bind-value="userToAdd.firstname" disabled="@isDisabled"/></label> *@
                    @* <br/> *@

                    <div class="row">
                        <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8 formStyle">
                            <SfTextBox Placeholder="Last Name" FloatLabelType="@FloatLabelType.Auto" @bind-value="userToAdd.lastname" disabled="@isDisabled" Type="InputType.Text"></SfTextBox>
                        </div>
                    </div>
                    @* <label>Last Name:<input type="text" @bind-value="userToAdd.lastname" disabled="@isDisabled"/></label> *@
                    @* <br/> *@

                    @* TODO *@
                    @* <div class="row"> *@
                    @*     <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8"> *@
                    @*         <SfTextBox Placeholder="ID Number" Type="InputType.Number" FloatLabelType="@FloatLabelType.Auto" @bind-value="userToAdd.idNr" disabled="@isDisabled" ></SfTextBox> *@
                    @*     </div> *@
                    @* </div> *@
                    <label>ID Number:<input type="number" @bind-value="userToAdd.idNr" disabled="@isDisabled"/></label>
                    <br/>

                    <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8 formStyle">
                        <SfTextBox CssClass="e-outline" Placeholder="Password" FloatLabelType="@FloatLabelType.Auto" Type="InputType.Password" @bind-value="userToAdd.password" disabled="@isDisabled"></SfTextBox>
                    </div>
                    @* <label>Password:<input type="password" @bind-value="userToAdd.password" disabled="@isDisabled"/></label> *@
                    @* <br/> *@

                    @* TODO *@
                    <label>
                        Gender:
                        <InputSelect @bind-Value="userToAdd.gender">
                            <option></option>
                            <option>Male</option>
                            <option>Female</option>
                        </InputSelect>
                    </label>
                    <br/>

                    <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8 formStyle">
                        <SfTextBox CssClass="e-outline" Placeholder="Email" FloatLabelType="@FloatLabelType.Auto" @bind-value="userToAdd.email" disabled="@isDisabled"></SfTextBox>
                    </div>
                    @* <label>Email:<input type="text" @bind-value="userToAdd.email"></label> *@
                    @* <br/> *@

                    <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8 formStyle">
                        <SfTextBox CssClass="e-outline" Placeholder="Phone number" FloatLabelType="@FloatLabelType.Auto" @bind-value="userToAdd.telNo" disabled="@isDisabled"></SfTextBox>
                    </div>
                    @* <label>Phone Number:<input type="text" @bind-value="userToAdd.telNo"></label> *@
                    @* <br/> *@

                    <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8 formStyle">
                        <SfTextBox CssClass="e-outline" Placeholder="Address" FloatLabelType="@FloatLabelType.Auto" @bind-value="userToAdd.address" disabled="@isDisabled"></SfTextBox>
                    </div>
                    @* <label>Address:<input type="text" @bind-value="userToAdd.address"></label> *@
                    @* <br/> *@

                    @* TODO *@
                    @* <div id="datepicker-control"> *@
                    @*     <SfDatePicker TValue="DateTime?" Placeholder="Birthday" @bind-value="userToAdd.birthday"></SfDatePicker> *@
                    @* </div> *@
                    @* <div class="col-xs-8 col-sm-8 col-lg-8 col-md-8"> *@
                    @*     <SfTextBox @ref="date" Placeholder="Birthday" @bind-value="userToAdd.birthday" disabled="@isDisabled"></SfTextBox> *@
                    @* </div> *@
                    <label>Birthday:<input type="date" @bind-value="userToAdd.birthday"></label>
                    <br/>

                </div>
                
                <input type="submit" class="btn btn-primary button2" value="Submit"/>
                <div class="alert alert-success mt-2" style="@display">
                    Registration was successful!
                </div>
                <div class="alert alert-danger mt-2" style="@displayError">
                    @ErrorMessage
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    User userToAdd { get; set; } = new User();
    string display = "display: none";
    string displayError = "display: none";
    bool isDisabled = false;
    string ErrorMessage;

    private async Task Add()
    {
        try
        {
            //Console.WriteLine(userToAdd.firstName+" "+userToAdd.lastName+" "+userToAdd.userType);
            await CloudUserService.AddUser(userToAdd);
            displayError = "display: none";
            display = "display: block";
            isDisabled = true;
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(userToAdd.idNr+"", userToAdd.password).Wait(100);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
            Console.WriteLine(e.InnerException + e.StackTrace + e.Message);
            displayError = "display: block";
        }
    }

}