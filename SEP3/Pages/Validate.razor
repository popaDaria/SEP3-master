@page "/validate"
@using SEP3.Data
@using SEP3.Model
@attribute [Authorize(Roles = "admin")]

@inject ICloudHospitalService CloudHospitalService;
@inject ICloudUserService CloudUserService

@if (hospitals == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="container-fluid horizontal-scrollable py-2 pt-4">
        <h2>Hospitals</h2>
        <div class="d-flex flex-row flex-nowrap overflow-auto">
            @foreach (var hospital in hospitals)
            {
                if (hospital.type == "hospital")
                {
                    
                    <div class="col-xs-4">
                        <HomeHospitalComponent imgSource='/images/weed.jpg' name="@hospital.name" address="@hospital.address" info="@hospital.info" postalCode="@hospital.postalCode" id="@hospital.id.ToString()" page="validate"></HomeHospitalComponent>
                    </div>
                }
            }
        </div>
    </div>
    <div class="container-fluid horizontal-scrollable py-2">
        <br/>
        <h2>Clinics</h2>
        <div class="d-flex flex-row flex-nowrap overflow-auto">
            @foreach (var hospital in hospitals)
            {
                if (hospital.type == "clinic")
                {
                    <div class="col-xs-4">
                        <HomeHospitalComponent imgSource='/images/weed.jpg' name="@hospital.name" address="@hospital.address" info="@hospital.info" postalCode="@hospital.postalCode" id="@hospital.id.ToString()" page="validate"></HomeHospitalComponent>
                    </div>
                }
            }
        </div>
    </div>
    <div class="container-fluid horizontal-scrollable py-2">
        <br/>
        <h2>Managers</h2>
        <div class="d-flex flex-row flex-nowrap overflow-auto">
            @foreach (var user in users)
            {
                <div class="col-xs-4">
                    <ProfileComponent imageSrc="/images/weed.jpg" id="@user.idNr" firstName="@user.firstname" lastName="@user.lastname" page="validate"></ProfileComponent>
                </div>
            }
        </div>
    </div>
}

@code {

    public List<Hospital> hospitals = new List<Hospital>();    
    public List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        hospitals = await CloudHospitalService.GetAllHospitalsInvalid();
        users = await CloudUserService.GetUnvalidatedUsers();
    }


}

<style>
    row {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    }
</style>