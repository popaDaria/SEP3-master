#pragma checksum "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9874733d46131c74d2e8a1caa849e80a0e5dcb0f"
// <auto-generated/>
#pragma warning disable 1591
namespace SEP3.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using SEP3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\SEP3\SEP3-master\SEP3\_Imports.razor"
using SEP3.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
using SEP3.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
using SEP3.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/MakeAppointment")]
    public partial class MakeAppointment : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1 style=\"font-size: 56px; font-weight: bold; color: #0B4E58\">Schedule a new Appointment</h1>\r\n");
            __builder.OpenComponent<Microsoft.AspNetCore.Components.Forms.EditForm>(1);
            __builder.AddAttribute(2, "Model", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Object>(
#nullable restore
#line 15 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                  appointmentToAdd

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(3, "OnValidSubmit", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Forms.EditContext>(this, 
#nullable restore
#line 15 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                   Add

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(4, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>)((context) => (__builder2) => {
                __builder2.OpenComponent<Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator>(5);
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(6, "\r\n    ");
                __builder2.OpenComponent<Microsoft.AspNetCore.Components.Forms.ValidationSummary>(7);
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(8, "\r\n    ");
                __builder2.OpenElement(9, "div");
                __builder2.AddAttribute(10, "class", "formBlock");
                __builder2.OpenElement(11, "label");
                __builder2.AddMarkupContent(12, "Hospital:\r\n            ");
                __Blazor.SEP3.Pages.MakeAppointment.TypeInference.CreateInputSelect_0(__builder2, 13, 14, 
#nullable restore
#line 20 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                       hospitalString

#line default
#line hidden
#nullable disable
                , 15, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => hospitalString = __value, hospitalString)), 16, () => hospitalString, 17, (__builder3) => {
                    __builder3.AddMarkupContent(18, "<option></option>");
#nullable restore
#line 22 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                 foreach (var hos in @allHospitals)
                {

#line default
#line hidden
#nullable disable
                    __builder3.OpenElement(19, "option");
                    __builder3.AddContent(20, 
#nullable restore
#line 24 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                             hos.id

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddContent(21, " : ");
                    __builder3.AddContent(22, 
#nullable restore
#line 24 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                       hos.name

#line default
#line hidden
#nullable disable
                    );
                    __builder3.CloseElement();
#nullable restore
#line 25 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                }

#line default
#line hidden
#nullable disable
                }
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(23, "\r\n        <br>\r\n        ");
                __builder2.OpenElement(24, "input");
                __builder2.AddAttribute(25, "type", "button");
                __builder2.AddAttribute(26, "class", "btn btn-info");
                __builder2.AddAttribute(27, "name", "selectHospital");
                __builder2.AddAttribute(28, "value", "Confirm Hospital");
                __builder2.AddAttribute(29, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 29 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                                                                            SelectHospital

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseElement();
                __builder2.AddMarkupContent(30, "\r\n        \r\n        ");
                __builder2.OpenElement(31, "div");
                __builder2.AddAttribute(32, "style", 
#nullable restore
#line 31 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                     display1

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenElement(33, "label");
                __builder2.AddMarkupContent(34, "Department:\r\n                ");
                __Blazor.SEP3.Pages.MakeAppointment.TypeInference.CreateInputSelect_1(__builder2, 35, 36, 
#nullable restore
#line 33 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                           deptString

#line default
#line hidden
#nullable disable
                , 37, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => deptString = __value, deptString)), 38, () => deptString, 39, (__builder3) => {
                    __builder3.AddMarkupContent(40, "<option></option>");
#nullable restore
#line 35 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                     foreach (var hos in @allDepartments)
                    {

#line default
#line hidden
#nullable disable
                    __builder3.OpenElement(41, "option");
                    __builder3.AddContent(42, 
#nullable restore
#line 37 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                 hos

#line default
#line hidden
#nullable disable
                    );
                    __builder3.CloseElement();
#nullable restore
#line 38 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                    }

#line default
#line hidden
#nullable disable
                }
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(43, "\r\n            \r\n            ");
                __builder2.OpenElement(44, "input");
                __builder2.AddAttribute(45, "type", "button");
                __builder2.AddAttribute(46, "class", "btn btn-info");
                __builder2.AddAttribute(47, "name", "selectDepartment");
                __builder2.AddAttribute(48, "value", "Confirm Department");
                __builder2.AddAttribute(49, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 42 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                                                                                    SelectDepartment

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(50, "\r\n        \r\n        ");
                __builder2.OpenElement(51, "div");
                __builder2.AddAttribute(52, "style", 
#nullable restore
#line 45 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                     display2

#line default
#line hidden
#nullable disable
                );
                __builder2.OpenElement(53, "label");
                __builder2.AddMarkupContent(54, "Doctor:\r\n                ");
                __Blazor.SEP3.Pages.MakeAppointment.TypeInference.CreateInputSelect_2(__builder2, 55, 56, 
#nullable restore
#line 47 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                           docString

#line default
#line hidden
#nullable disable
                , 57, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => docString = __value, docString)), 58, () => docString, 59, (__builder3) => {
                    __builder3.AddMarkupContent(60, "<option></option>");
#nullable restore
#line 49 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                     foreach (var hos in @allDoctors)
                    {

#line default
#line hidden
#nullable disable
                    __builder3.OpenElement(61, "option");
                    __builder3.AddContent(62, 
#nullable restore
#line 51 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                 hos.idNr

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddContent(63, " : ");
                    __builder3.AddContent(64, 
#nullable restore
#line 51 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                             hos.firstname

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddContent(65, " ");
                    __builder3.AddContent(66, 
#nullable restore
#line 51 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                            hos.lastname

#line default
#line hidden
#nullable disable
                    );
                    __builder3.CloseElement();
#nullable restore
#line 52 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                    }

#line default
#line hidden
#nullable disable
                }
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(67, "\r\n                        \r\n            ");
                __builder2.OpenElement(68, "input");
                __builder2.AddAttribute(69, "type", "button");
                __builder2.AddAttribute(70, "class", "btn btn-info");
                __builder2.AddAttribute(71, "name", "selectDoctor");
                __builder2.AddAttribute(72, "value", "Confirm Doctor");
                __builder2.AddAttribute(73, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 56 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                                                                            SelectDoctor

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(74, "\r\n        \r\n        ");
                __builder2.OpenElement(75, "div");
                __builder2.AddAttribute(76, "style", 
#nullable restore
#line 59 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                     display3

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(77, "<br>\r\n            ");
                __builder2.OpenElement(78, "label");
                __builder2.AddAttribute(79, "style", "color: #0f6674");
                __builder2.AddAttribute(80, "class", "oi oi-bell");
                __builder2.AddContent(81, 
#nullable restore
#line 63 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                 labelContent

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(82, "\r\n            <br>\r\n            ");
                __builder2.OpenElement(83, "label");
                __builder2.AddContent(84, "Start Time:");
                __builder2.OpenElement(85, "input");
                __builder2.AddAttribute(86, "type", "datetime-local");
                __builder2.AddAttribute(87, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 66 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                                       AddLabel

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(88, "\r\n            <br>\r\n            ");
                __builder2.OpenElement(89, "label");
                __builder2.AddAttribute(90, "style", "color: #0f6674");
                __builder2.AddAttribute(91, "class", "oi oi-bell");
                __builder2.AddContent(92, 
#nullable restore
#line 69 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                 sameDateWarning

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(93, "\r\n            <br>\r\n            ");
                __builder2.OpenElement(94, "label");
                __builder2.AddContent(95, "End Time:");
                __builder2.OpenElement(96, "input");
                __builder2.AddAttribute(97, "type", "datetime-local");
                __builder2.AddAttribute(98, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.ChangeEventArgs>(this, 
#nullable restore
#line 72 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                                     SelectEndTime

#line default
#line hidden
#nullable disable
                ));
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(99, "\r\n            <br>\r\n            ");
                __builder2.OpenElement(100, "label");
                __builder2.AddContent(101, "Summary:");
                __builder2.OpenElement(102, "input");
                __builder2.AddAttribute(103, "type", "text");
                __builder2.AddAttribute(104, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 74 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                            appointmentToAdd.summary

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(105, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => appointmentToAdd.summary = __value, appointmentToAdd.summary));
                __builder2.SetUpdatesAttributeName("value");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(106, "\r\n            <br>");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(107, "\r\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\r\n    ");
                __builder2.OpenElement(108, "div");
                __builder2.AddAttribute(109, "class", "alert alert-success mt-2");
                __builder2.AddAttribute(110, "style", 
#nullable restore
#line 80 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                  display

#line default
#line hidden
#nullable disable
                );
                __builder2.AddContent(111, "Registration was successful!");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(112, "\r\n    ");
                __builder2.OpenElement(113, "div");
                __builder2.AddAttribute(114, "class", "alert alert-danger mt-2");
                __builder2.AddAttribute(115, "style", 
#nullable restore
#line 81 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                 displayError

#line default
#line hidden
#nullable disable
                );
                __builder2.AddContent(116, 
#nullable restore
#line 81 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
                                                                ErrorMessage

#line default
#line hidden
#nullable disable
                );
                __builder2.CloseElement();
            }
            ));
            __builder.CloseComponent();
        }
        #pragma warning restore 1998
#nullable restore
#line 86 "D:\SEP3\SEP3-master\SEP3\Pages\MakeAppointment.razor"
       
    Appointment appointmentToAdd { get; set; }
    
    string hospitalString { get; set; }
    int hosId { get; set; }
    List<Hospital> allHospitals { get; set; } = new List<Hospital>();
    List<string> allDepartments { get; set; } = new List<string>();
    string deptString { get; set; } 
    
    string display1 { get; set; }
    string display2 { get; set; }
    string display3 { get; set; }
    string display = "display: none";
    string displayError = "display: none";
    public string ErrorMessage { get; set; }
    string labelContent { get; set; } = "";
    string sameDateWarning { get; set; } = "";
    
    IList<User> allDoctors { get; set; } = new List<User>();
    string docString { get; set; }
    int docId { get; set; }
    int patId { get; set; }
    List<AvailableDay> AvailableDays { get; set; } = new List<AvailableDay>();
    AvailableDay DoctorDay { get; set; }
    bool ok { get; set; } = false;
    
    List<Appointment> ApptForPatient { get; set; } = new List<Appointment>();
    List<Appointment> ApptForDoctor { get; set; } = new List<Appointment>();

    protected override async Task OnInitializedAsync()
    {
        appointmentToAdd = new Appointment();
        allHospitals = await CloudHospitalService.GetAllHospitals();
        display1 = "display: none";
        display2 = "display: none";
        display3 = "display: none";
        patId = Int32.Parse(AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Claims.ToList()[0].Value);
        ApptForPatient = await CloudAppointmentService.GetAllForPatient(patId);
    }

    private async Task SelectHospital()
    {
        hosId = Int32.Parse(hospitalString.Split(" ")[0]);
        allDepartments = await CloudHospitalService.GetAllDepartments(hosId);
        display1 = "display: block";
    }

    private async Task SelectDepartment()
    {
        allDoctors = await CloudDoctorHospitalService.GetAllDoctorsForDepartment(hosId, deptString);
        display2 = "display: block";
    }

    private async Task SelectDoctor()
    {
        docId = Int32.Parse(docString.Split(" ")[0]);
        AvailableDays = await CloudAvailableDayService.GetAvailableDays(docId);
        ApptForDoctor = await CloudAppointmentService.GetAllForDoctor(docId);
        display3 = "display: block";
    //labelContent = "Doctor's schedule:";
        if (AvailableDays.Count == 0)
        {
            displayError = "display : block";
            ErrorMessage = "Warning: The doctor you have selected has no available days registered in the system!";
            ok = true;
        }
        else
        {
            displayError = "display : none";
        }
    }
    
    private void AddLabel(ChangeEventArgs e)
    {
        bool found = false;
    //appointmentToAdd.appointmentDate = (DateTime)e.Value;
        Console.WriteLine(e.Value);
        if (e.Value != null)
        {
            string result = (string) e.Value;
            string[] contents = result.Split("T");
            string[] dateContents = contents[0].Split("-");
            string[] timeContents = contents[1].Split(":");
            appointmentToAdd.startTime = new DateTime(Int32.Parse(dateContents[0]),Int32.Parse(dateContents[1]),Int32.Parse(dateContents[2]), 
                Int32.Parse(timeContents[0]),Int32.Parse(timeContents[1]),0 );
        }
        foreach (var availableDay in AvailableDays)
        {
            if (availableDay.AvailableDate.Day == appointmentToAdd.startTime.Day &&
                availableDay.AvailableDate.Month == appointmentToAdd.startTime.Month &&
                availableDay.AvailableDate.Year == appointmentToAdd.startTime.Year)
            {
                labelContent = "The Working hours are: " + availableDay.StartTime.TimeOfDay.ToString() + " - " + availableDay.EndTime.TimeOfDay.ToString();
                found = true;
            }
        }
        if (!found)
        {
            labelContent = "Not an available date!";
        }
    }

    bool okDates { get; set; } = false;

    private void SelectEndTime(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            string result = (string) e.Value;
            string[] contents = result.Split("T");
            string[] dateContents = contents[0].Split("-");
            string[] timeContents = contents[1].Split(":");
            appointmentToAdd.endTime = new DateTime(Int32.Parse(dateContents[0]),Int32.Parse(dateContents[1]),Int32.Parse(dateContents[2]), 
                Int32.Parse(timeContents[0]),Int32.Parse(timeContents[1]),0 );
            if (!appointmentToAdd.endTime.Date.Equals(appointmentToAdd.startTime.Date))
            {
                sameDateWarning = "End Time of appointment must have the same date as Start Time!";
                okDates = false;
            }
            else
            {
                if (appointmentToAdd.startTime.TimeOfDay.TotalMinutes < appointmentToAdd.endTime.TimeOfDay.TotalMinutes)
                {
                    sameDateWarning = "";
                    okDates = true;
                }
                else
                {
                    sameDateWarning = "End Time of appointment must be after Start Time of appointment!";
                    okDates = false;
                }
            }
        }    
    }
    
    private async Task Add()
    {
        try
        {
            appointmentToAdd.doctorId = docId;
            appointmentToAdd.patientId = patId;

            foreach (var availableDay in AvailableDays)
            {
                if (availableDay.AvailableDate.Day == appointmentToAdd.startTime.Day &&
                    availableDay.AvailableDate.Month == appointmentToAdd.startTime.Month &&
                    availableDay.AvailableDate.Year == appointmentToAdd.startTime.Year)
                {
                    ok = true;
                    DoctorDay = availableDay;
                }
            }
            if (ok)
            {
                if (AvailableDays.Count != 0)
                {
                    if (DoctorDay.AppointmentNr != 0)
                    {
                        if (appointmentToAdd.startTime.TimeOfDay.TotalMilliseconds >= DoctorDay.StartTime.TimeOfDay.TotalMilliseconds && 
                            appointmentToAdd.endTime.TimeOfDay.TotalMilliseconds < DoctorDay.EndTime.TimeOfDay.TotalMilliseconds)
                        {
                            await AddAppointment();
                        }
                        else
                        {
                            displayError = "display : block";
                            ErrorMessage = "Selected time does not conform to doctor's schedule. Please select another time.";
                        }
                    }
                    else
                    {
                        displayError = "display : block";
                        ErrorMessage = "Doctor has no more available appointment slots for the selected date. Please select another date.";
                    }
                }
                else
                {
                    await AddAppointment();
                }
            }
            else
            {
                displayError = "display : block";
                ErrorMessage = "Selected date is not an available date for the doctor. Please select another date.";
            }
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
            Console.WriteLine(e.InnerException + e.StackTrace + e.Message);
            displayError = "display: block";
        }
    }

    private async Task AddAppointment()
    {
        List<Appointment> SameDateAppts = new List<Appointment>();

        if (okDates)
        {
            foreach (var ad in ApptForDoctor)
            {
                if (appointmentToAdd.startTime.Date.Equals(ad.startTime.Date))
                {
                    SameDateAppts.Add(ad);
                }
            }

            bool validTime = true;
            foreach (var sameDateAppt in SameDateAppts)
            {
                if ((sameDateAppt.startTime.TimeOfDay.TotalMinutes >= appointmentToAdd.startTime.TimeOfDay.TotalMinutes && appointmentToAdd.startTime.TimeOfDay.TotalMinutes < sameDateAppt.endTime.TimeOfDay.TotalMinutes)
                    || (appointmentToAdd.endTime.TimeOfDay.TotalMinutes > sameDateAppt.startTime.TimeOfDay.TotalMinutes && appointmentToAdd.startTime.TimeOfDay.TotalMinutes <= sameDateAppt.startTime.TimeOfDay.TotalMinutes))
                {
                    validTime = false;
                }
            }

            bool found = false;
            foreach (var ap in ApptForPatient)
            {
                if (ap.doctorId == appointmentToAdd.doctorId && ap.startTime.Equals(appointmentToAdd.startTime) &&
                    ap.endTime.Equals(appointmentToAdd.endTime))
                {
                    found = true;
                }
            }

            if (!found)
            {
                if (validTime)
                {
                    displayError = "display: none";
                    display = "display: block";
                    labelContent = "";
                    await CloudAppointmentService.MakeAppointment(appointmentToAdd);
                    --DoctorDay.AppointmentNr;
                    await CloudAvailableDayService.UpdateAvailableDay(DoctorDay);
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    displayError = "display : block";
                    ErrorMessage = "Appointment time reserved! Pick another time!";
                }
            }
            else
            {
                displayError = "display : block";
                ErrorMessage = "Appointment already added!";
    //NavigationManager.NavigateTo("/");
            }
        }
        else
        {
            displayError = "display:block";
            ErrorMessage = "Selected Start and End time do not have the same date or have incorrect times!";
        }
    }

    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudAvailableDayService CloudAvailableDayService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudUserService CloudUserService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudAppointmentService CloudAppointmentService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudDoctorHospitalService CloudDoctorHospitalService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudHospitalService CloudHospitalService { get; set; }
    }
}
namespace __Blazor.SEP3.Pages.MakeAppointment
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateInputSelect_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ValueChanged", __arg1);
        __builder.AddAttribute(__seq2, "ValueExpression", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
        public static void CreateInputSelect_1<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ValueChanged", __arg1);
        __builder.AddAttribute(__seq2, "ValueExpression", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
        public static void CreateInputSelect_2<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg2, int __seq3, global::Microsoft.AspNetCore.Components.RenderFragment __arg3)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ValueChanged", __arg1);
        __builder.AddAttribute(__seq2, "ValueExpression", __arg2);
        __builder.AddAttribute(__seq3, "ChildContent", __arg3);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
