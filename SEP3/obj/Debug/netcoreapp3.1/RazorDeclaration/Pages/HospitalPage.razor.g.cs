#pragma checksum "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9008b1a70da493f093821e0b590ecbc7e962af96"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SEP3.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using SEP3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\_Imports.razor"
using SEP3.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using Syncfusion.Blazor.InPlaceEditor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using SEP3.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using SEP3.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using SEP3.Auth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using Syncfusion.Blazor.Maps;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using RenderMode = Syncfusion.Blazor.InPlaceEditor.RenderMode;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using InputType = Syncfusion.Blazor.InPlaceEditor.InputType;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using locationiq.Api;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using locationiq.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using System.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
using Syncfusion.Blazor.PivotView;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/hospital/{id}")]
    public partial class HospitalPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 194 "D:\THIRD SEMESTER\SEP3\SEP3-master-Daria2\SEP3\Pages\HospitalPage.razor"
       
    Hospital hospital;
    public string addressHeader;
    double lon = 10;
    double lat = 10;
    
    private RenderMode Mode = RenderMode.Inline;
    private EditableType EditableOn = EditableType.Click;
    private bool ShowButtons { get; set; } = false;
    private bool Disabled { get; set; } = true;
    private string display = "display: none";
    
    public Hospital EditableHospital = new Hospital();
    
    int RatingValue { get; set; } = 0;
    string SuccessRate { get; set; } = "";
    string classRate { get; set; } = "";

    public class MarkerData
    {
        public string Name;
        public double Latitude;
        public double Longitude;
    }

    public List<MarkerData> MarkerDatas = new List<MarkerData>();


    [Parameter]
    public string id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        hospital = await CloudHospitalService.GetHospital(Int32.Parse(id));
        addressHeader = "The address of " + hospital.name + ": " + hospital.address;
        await GetCoordinates();
        MarkerDatas.Add(new MarkerData {Name = "Map", Latitude = lat, Longitude = lon});
        EditableHospital.Update(hospital);
    }

    public async Task GetCoordinates()
    {
        HttpClient client = new HttpClient();
        HttpResponseMessage message = await client.GetAsync("https://us1.locationiq.com/v1/search.php?key=pk.c4b221acbc78318a8f75e22369de4311&format=json&q=" + HttpUtility.UrlEncode(hospital.address));
        string content = await message.Content.ReadAsStringAsync();
    //Console.WriteLine(message.Content.ReadAsStringAsync().Result);
    // string result = JsonConvert.DeserializeObject<string>(content);
        string result = content;
        if (result.Length > 40)
        {
            string[] contents = result.Split(",");
            string latCont="";
            string lonCont="";
            foreach (var x in contents)
            {
                if (x.Contains("\"lat\":"))
                    latCont = x;
                if (x.Contains("\"lon\":"))
                    lonCont = x;
            }
    //Console.WriteLine("latcont:"+latCont);
    //Console.WriteLine("loncont:" + lonCont);
            lat = Double.Parse(latCont.Split("\"")[3]);
            lon = Double.Parse(lonCont.Split("\"")[3]);
    //lat = Double.Parse(result.Split("\"")[29]);
    //lon = Double.Parse(result.Split("\"")[33]);
        }
    }

    public async Task SendToServer()
    {
        await CloudHospitalService.EditHospital(EditableHospital);
        hospital.Update(EditableHospital);
        await GetCoordinates();
        addressHeader = "The address of " + hospital.name + ": " + hospital.address;
        MarkerDatas.Add(new MarkerData {Name = "Map", Latitude = lat, Longitude = lon});
        Disabled = true;
        display = "display: none";
    }
    
    public void Cancel()
    {
        Disabled = true;
        display = "display: none";
        EditableHospital.Update(hospital);
        StateHasChanged();
    }


    private void EnableEdit()
    {
        Disabled = false;
        display = "display: inline";
    }
    
    private async Task Rate()
    {
        try
        {
            Rating newRating = new Rating();
            newRating.hospitalId = Int32.Parse(id);
            newRating.idNr = Int32.Parse(AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Claims.ToList()[0].Value);
            newRating.rating = RatingValue;
            await CloudRatingService.AddRating(newRating);
            classRate = "oi oi-check";
            SuccessRate = "Rating has been submitted!";
            hospital = await CloudHospitalService.GetHospital(hospital.id);
        }
        catch (Exception e)
        {
            SuccessRate = "";
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudRatingService CloudRatingService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudHospitalService CloudHospitalService { get; set; }
    }
}
#pragma warning restore 1591
