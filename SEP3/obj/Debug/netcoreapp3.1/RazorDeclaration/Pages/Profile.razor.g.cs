#pragma checksum "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b63ce6ae9ec9b958c6366c8af8d54d656dbf4fed"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SEP3.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using SEP3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\_Imports.razor"
using SEP3.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using Syncfusion.Blazor.InPlaceEditor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using SEP3.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using SEP3.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using SEP3.Auth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using RenderMode = Syncfusion.Blazor.InPlaceEditor.RenderMode;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using InputType = Syncfusion.Blazor.InPlaceEditor.InputType;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
using System.Text;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
           [Authorize(Policy = "MustBeLoggedIn")]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/profile")]
    public partial class Profile : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 193 "D:\THIRD SEMESTER\SEP3\SEP3-master-Bogdan - Copy\SEP3\Pages\Profile.razor"
       
    private RenderMode Mode = RenderMode.Inline;
    private EditableType EditableOn = EditableType.Click;
    private bool ShowButtons { get; set; } = false;
    private bool Disabled { get; set; } = true;
    private string display = "display: none";
    User user { get; set; }
    User editedUser = new User();
    string idNr = "";
    
    int apptId { get; set; }
    IList<Appointment> AllAppointments { get; set; } = new List<Appointment>();
    IList<Appointment> ValidAppt { get; set; } = new List<Appointment>();
    string NrOfAppt { get; set; } = "";
    string medicalRecord { get; set; } = "";
    MedicalRecord MedicalRecord { get; set; }= new MedicalRecord();

    protected override async Task OnInitializedAsync()
    {
        idNr = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).GetAuthenticationStateAsync().Result.User.Claims.ToList()[0].Value;
        Console.WriteLine("Logged in as: "+idNr);
        user = await CloudUserService.GetUser(idNr);
        editedUser.Update(user);
        AllAppointments = await CloudAppointmentService.GetAllForPatient(user.idNr);
        foreach (var appt in AllAppointments)
        {
            if (appt.startTime.Date.CompareTo(DateTime.Today) >= 0)
            {
                ValidAppt.Add(appt);
            }
        }
        if (ValidAppt.Count != 0)
        {
            NrOfAppt = "";
        }
        else
        {
            NrOfAppt = "No Valid Appointments!";
        }

        if (user.userType.Equals("patient"))
        {
            MedicalRecord = null;
            MedicalRecord = await CloudMedicalRecordService.GetMedicalRecord(user.idNr);
            if (MedicalRecord != null)
            {
                if (MedicalRecord.content != null && MedicalRecord.content.Length > 0)
                    medicalRecord = Encoding.Default.GetString(MedicalRecord.content);
            }
            else
            {
                medicalRecord = "No Medical Record yet registered on the platform!";
            }
        }
    }

    public void EnableEdit()
    {
        Disabled = false;
        display = "display: inline";
    }

    public async Task SendToServer()
    {
        await CloudUserService.EditUser(editedUser);
        user.Update(editedUser);
        Disabled = true;
        display = "display: none";
    }

    public void Cancel()
    {
        Disabled = true;
        display = "display: none";
        editedUser.Update(user);
        StateHasChanged();
    }


    private void ManageHospitals()
    {
        NavigationManager.NavigateTo("/manage/"+user.idNr);
    }

    private void AddNewDoctor()
    {
        NavigationManager.NavigateTo("/addDoctor/"+user.idNr);
    }

    private async Task Remove()
    {
        try
        {
            Appointment appointment = new Appointment();
            foreach (var ap in AllAppointments)
            {
                if (ap.id == apptId)
                    appointment = ap;
            }
            await CloudAppointmentService.RemoveAppointment(appointment);
            AllAppointments = await CloudAppointmentService.GetAllForPatient(user.idNr);
            ValidAppt.Clear();
            foreach (var appt in AllAppointments)
            {
                if (appt.startTime.Date.CompareTo(DateTime.Today) >= 0)
                {
                    ValidAppt.Add(appt);
                }
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudMedicalRecordService CloudMedicalRecordService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudAppointmentService CloudAppointmentService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICloudUserService CloudUserService { get; set; }
    }
}
#pragma warning restore 1591
