@using Syncfusion.Blazor.Navigations
@using SEP3.Auth
@inject NavigationManager NavigationManager;
@inject AuthenticationStateProvider AuthenticationStateProvider;


<link href="css/sidebar.css" type="text/css" rel="stylesheet" />
<span id="hamburger" @onclick="@Show" class="@Hamburgerclass"></span>
<SfSidebar @ref="SidebarObj" Position="@Position" HtmlAttributes="@HtmlAttribute" Type="SidebarType.Over" @bind-IsOpen="@SidebarToggle" CloseOnDocumentClick="true" >
    <ChildContent>
        <div class="title-header">
            <div style="display:inline-block"> Sidebar </div>
            <span id="close" @onclick="@Close" class="oi oi-x text-black-50" style="fill: black;"></span>
        </div>
        <div class="sub-title">
            <ul class="list-unstyled">
                
                <AuthorizeView Policy="MustBeLoggedIn">
                    <NotAuthorized>
                        <li>
                            <a class="pl-4 pr-4 p-4" href="login">Log In</a>
                        </li>
                        <li>
                            <a class="pl-4 pr-4 p-4" href="register">Register</a>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
                
                <li class="pl-4 pr-4">
                    <a class="pl-4 pr-4 p-4" href="">Home</a>
                </li>

                <AuthorizeView Policy="MustBeLoggedIn">
                    <li>
                        <a class="pl-4 pr-4 p-4" href="profile">Profile</a>
                    </li>
                </AuthorizeView>

                <AuthorizeView Policy="MustBeLoggedInAsManager">
                    <li>
                        <a class="pl-4 pr-4 p-4" href="addHospital">Add Hospital</a>
                    </li>
                </AuthorizeView>

                <AuthorizeView Policy="MustBeLoggedIn">
                    <li>
                        <a class="pl-4 pr-4 p-4" @onclick="PerformLogOut" href="">Log Out</a>
                    </li>
                </AuthorizeView>
            </ul>
        </div>
    </ChildContent>
</SfSidebar>


@code {
    SfSidebar SidebarObj;
    public string Leftbtn = "Left";
    public string Hamburgerclass = "e-icons menu default";
    public SidebarPosition Position { get; set; } = SidebarPosition.Left;
    public bool SidebarToggle = false;
    
    private string idNr;
    private string Password;
    private string ErrorMessage;
    private string display = "display: none";

    public void Show()
    {
        SidebarToggle = true;
    }

    public void Close()
    {
        SidebarToggle = false;
    }

    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    Dictionary<string, object> HtmlAttribute = new Dictionary<string, object>()
    {
        {"class", "default-sidebar"}
    };
    
    public async Task PerformLogOut()
    {
        ErrorMessage = "";
        idNr = "";
        Password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
        }
        catch (Exception e)
        {
        }
    }
  
}